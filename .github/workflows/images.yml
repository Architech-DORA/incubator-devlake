name: Build & Push backend
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        
env:
  ACR_NAME: glqaacrdnclcacntest.azurecr.io
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  build-and-push-builder:
    name: Build and Push devlake builder
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Build and push lake image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          target: builder
          tags: ${{ env.ACR_NAME }}/devlake:amd64-builder
          platforms: linux/amd64

  build-and-push-base:
    name: Build and Push devlake base
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Build and push lake image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          target: base
          tags: ${{ env.ACR_NAME }}/devlake:base
          platforms: linux/amd64,linux/arm64

  build-devlake:
    needs: build-and-push-builder
    name: Build and cache devlake
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["arm64", "amd64"]
    steps:
      - uses: actions/checkout@v3
      - name: Get short sha
        id: get_short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Build and cache lake build
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: false
          target: build
          tags: ${{ env.ACR_NAME }}/devlake:build-cache-${{ matrix.platform }}
          platforms: linux/${{ matrix.platform }}
          build-args: |
            TAG=${{ github.ref_name }}
            SHA=${{ steps.get_short_sha.outputs.SHORT_SHA }}

  build-and-push-devlake:
    needs: [build-devlake, build-and-push-base]
    name: Build and Push devlake image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get short sha
        id: get_short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Get push tags
        id: get_push_tags
        run: |
          image_name=${{ env.ACR_NAME }}/devlake
          if printf ${{ github.ref_name }} | grep -Pq '^v(\d+).(\d+).(\d+)$'; then
              echo "TAGS=${image_name}:latest,${image_name}:${{ github.ref_name }}" >> $GITHUB_ENV
          else
              echo "TAGS=${image_name}:${{ github.ref_name }}" >> $GITHUB_ENV
          fi
      - name: Build and push lake image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ env.TAGS }}
          platforms: linux/amd64,linux/arm64

  build-and-push-other-image:
    name: Build and Push ${{ matrix.build.name }} image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          - name: config-ui
            image: devlake-config-ui
            context: config-ui
          - name: grafana
            image: devlake-dashboard
            context: grafana
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Get push tags
        id: get_push_tags
        run: |
          image_name=${{ env.ACR_NAME }}/${{ matrix.build.image }}
          if printf ${{ github.ref_name }} | grep -Pq '^v(\d+).(\d+).(\d+)$'; then
              echo "TAGS=${image_name}:latest,${image_name}:${{ github.ref_name }}" >> $GITHUB_ENV
          else
              echo "TAGS=${image_name}:${{ github.ref_name }}" >> $GITHUB_ENV
          fi
      - name: Build and push ${{ matrix.build.name }} image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.build.context }}
          push: true
          tags: ${{ env.TAGS }}
          platforms: linux/amd64,linux/arm64
