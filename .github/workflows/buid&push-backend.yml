name: Build & Push backend
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true

env:
  ACR_NAME: glqaacrdnclcacntest.azurecr.io
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  build-and-push-builder:
    name: Build and Push devlake builder
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Build and push lake image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          target: builder
          tags: ${{ env.ACR_NAME }}/devlake:amd64-builder
          platforms: linux/amd64
          builder: docker
          cache-from: ${{ env.ACR_NAME }}/devlake:amd64-builder
          cache-to: ${{ env.ACR_NAME }}/devlake:amd64-builder

  build-and-push-base:
    name: Build and Push devlake base
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
      - name: Build and push lake image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          target: base
          tags: ${{ env.ACR_NAME }}/devlake:base
          platforms: linux/amd64,linux/arm64
          builder: docker
          cache-from: ${{ env.ACR_NAME }}/devlake:base
          cache-to: ${{ env.ACR_NAME }}/devlake:base

  build-devlake:
    needs: [build-and-push-builder]
    name: Build and cache devlake
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["arm64", "amd64"]
    steps:
      - name: Get short sha
        id: get_short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD
